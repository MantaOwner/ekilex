/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables;


import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.tables.records.ViewWwWordEtymSourceLinkRecord;
import eki.ekilex.data.db.udt.records.TypeSourceLinkRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewWwWordEtymSourceLink extends TableImpl<ViewWwWordEtymSourceLinkRecord> {

    private static final long serialVersionUID = 2109538525;

    /**
     * The reference instance of <code>public.view_ww_word_etym_source_link</code>
     */
    public static final ViewWwWordEtymSourceLink VIEW_WW_WORD_ETYM_SOURCE_LINK = new ViewWwWordEtymSourceLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewWwWordEtymSourceLinkRecord> getRecordType() {
        return ViewWwWordEtymSourceLinkRecord.class;
    }

    /**
     * The column <code>public.view_ww_word_etym_source_link.word_id</code>.
     */
    public final TableField<ViewWwWordEtymSourceLinkRecord, Long> WORD_ID = createField("word_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_ww_word_etym_source_link.source_links</code>.
     */
    public final TableField<ViewWwWordEtymSourceLinkRecord, TypeSourceLinkRecord[]> SOURCE_LINKS = createField("source_links", eki.ekilex.data.db.udt.TypeSourceLink.TYPE_SOURCE_LINK.getDataType().getArrayDataType(), this, "");

    /**
     * Create a <code>public.view_ww_word_etym_source_link</code> table reference
     */
    public ViewWwWordEtymSourceLink() {
        this(DSL.name("view_ww_word_etym_source_link"), null);
    }

    /**
     * Create an aliased <code>public.view_ww_word_etym_source_link</code> table reference
     */
    public ViewWwWordEtymSourceLink(String alias) {
        this(DSL.name(alias), VIEW_WW_WORD_ETYM_SOURCE_LINK);
    }

    /**
     * Create an aliased <code>public.view_ww_word_etym_source_link</code> table reference
     */
    public ViewWwWordEtymSourceLink(Name alias) {
        this(alias, VIEW_WW_WORD_ETYM_SOURCE_LINK);
    }

    private ViewWwWordEtymSourceLink(Name alias, Table<ViewWwWordEtymSourceLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewWwWordEtymSourceLink(Name alias, Table<ViewWwWordEtymSourceLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ViewWwWordEtymSourceLink(Table<O> child, ForeignKey<O, ViewWwWordEtymSourceLinkRecord> key) {
        super(child, key, VIEW_WW_WORD_ETYM_SOURCE_LINK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewWwWordEtymSourceLink as(String alias) {
        return new ViewWwWordEtymSourceLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewWwWordEtymSourceLink as(Name alias) {
        return new ViewWwWordEtymSourceLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwWordEtymSourceLink rename(String name) {
        return new ViewWwWordEtymSourceLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwWordEtymSourceLink rename(Name name) {
        return new ViewWwWordEtymSourceLink(name, null);
    }
}
