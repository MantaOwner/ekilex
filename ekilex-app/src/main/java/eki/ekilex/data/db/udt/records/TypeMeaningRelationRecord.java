/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt.records;


import eki.ekilex.data.db.udt.TypeMeaningRelation;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeMeaningRelationRecord extends UDTRecordImpl<TypeMeaningRelationRecord> implements Record11<Long, Long, String, String, Integer, String, String, String[], String[], String[], String> {

    private static final long serialVersionUID = -276842987;

    /**
     * Setter for <code>public.type_meaning_relation.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_meaning_relation.word_id</code>.
     */
    public void setWordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.type_meaning_relation.word</code>.
     */
    public void setWord(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.word</code>.
     */
    public String getWord() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.type_meaning_relation.word_lang</code>.
     */
    public void setWordLang(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.word_lang</code>.
     */
    public String getWordLang() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.type_meaning_relation.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.type_meaning_relation.aspect_code</code>.
     */
    public void setAspectCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.aspect_code</code>.
     */
    public String getAspectCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.type_meaning_relation.complexity</code>.
     */
    public void setComplexity(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.complexity</code>.
     */
    public String getComplexity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.type_meaning_relation.lex_value_state_codes</code>.
     */
    public void setLexValueStateCodes(String... value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.lex_value_state_codes</code>.
     */
    public String[] getLexValueStateCodes() {
        return (String[]) get(7);
    }

    /**
     * Setter for <code>public.type_meaning_relation.lex_register_codes</code>.
     */
    public void setLexRegisterCodes(String... value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.lex_register_codes</code>.
     */
    public String[] getLexRegisterCodes() {
        return (String[]) get(8);
    }

    /**
     * Setter for <code>public.type_meaning_relation.lex_government_values</code>.
     */
    public void setLexGovernmentValues(String... value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.lex_government_values</code>.
     */
    public String[] getLexGovernmentValues() {
        return (String[]) get(9);
    }

    /**
     * Setter for <code>public.type_meaning_relation.meaning_rel_type_code</code>.
     */
    public void setMeaningRelTypeCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.type_meaning_relation.meaning_rel_type_code</code>.
     */
    public String getMeaningRelTypeCode() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, String, String, Integer, String, String, String[], String[], String[], String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, String, String, Integer, String, String, String[], String[], String[], String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TypeMeaningRelation.MEANING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return TypeMeaningRelation.WORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TypeMeaningRelation.WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TypeMeaningRelation.WORD_LANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return TypeMeaningRelation.HOMONYM_NR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TypeMeaningRelation.ASPECT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return TypeMeaningRelation.COMPLEXITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field8() {
        return TypeMeaningRelation.LEX_VALUE_STATE_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field9() {
        return TypeMeaningRelation.LEX_REGISTER_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field10() {
        return TypeMeaningRelation.LEX_GOVERNMENT_VALUES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return TypeMeaningRelation.MEANING_REL_TYPE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getMeaningId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getWordLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getHomonymNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getAspectCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getComplexity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component8() {
        return getLexValueStateCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component9() {
        return getLexRegisterCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component10() {
        return getLexGovernmentValues();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getMeaningRelTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getMeaningId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getWordLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getHomonymNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAspectCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getComplexity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value8() {
        return getLexValueStateCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value9() {
        return getLexRegisterCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value10() {
        return getLexGovernmentValues();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getMeaningRelTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value1(Long value) {
        setMeaningId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value2(Long value) {
        setWordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value3(String value) {
        setWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value4(String value) {
        setWordLang(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value5(Integer value) {
        setHomonymNr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value6(String value) {
        setAspectCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value7(String value) {
        setComplexity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value8(String... value) {
        setLexValueStateCodes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value9(String... value) {
        setLexRegisterCodes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value10(String... value) {
        setLexGovernmentValues(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord value11(String value) {
        setMeaningRelTypeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningRelationRecord values(Long value1, Long value2, String value3, String value4, Integer value5, String value6, String value7, String[] value8, String[] value9, String[] value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeMeaningRelationRecord
     */
    public TypeMeaningRelationRecord() {
        super(TypeMeaningRelation.TYPE_MEANING_RELATION);
    }

    /**
     * Create a detached, initialised TypeMeaningRelationRecord
     */
    public TypeMeaningRelationRecord(Long meaningId, Long wordId, String word, String wordLang, Integer homonymNr, String aspectCode, String complexity, String[] lexValueStateCodes, String[] lexRegisterCodes, String[] lexGovernmentValues, String meaningRelTypeCode) {
        super(TypeMeaningRelation.TYPE_MEANING_RELATION);

        set(0, meaningId);
        set(1, wordId);
        set(2, word);
        set(3, wordLang);
        set(4, homonymNr);
        set(5, aspectCode);
        set(6, complexity);
        set(7, lexValueStateCodes);
        set(8, lexRegisterCodes);
        set(9, lexGovernmentValues);
        set(10, meaningRelTypeCode);
    }
}
