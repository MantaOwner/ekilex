/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwWordEtymology;
import eki.wordweb.data.db.udt.records.TypeWordEtymRelationRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwWordEtymologyRecord extends TableRecordImpl<MviewWwWordEtymologyRecord> implements Record12<Long, Long, Long, String, String, String[], String, String, String, Boolean, Long, TypeWordEtymRelationRecord[]> {

    private static final long serialVersionUID = 762983129;

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_id</code>.
     */
    public void setWordEtymId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_id</code>.
     */
    public Long getWordEtymId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_word_id</code>.
     */
    public void setWordEtymWordId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_word_id</code>.
     */
    public Long getWordEtymWordId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_word</code>.
     */
    public void setWordEtymWord(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_word</code>.
     */
    public String getWordEtymWord() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_word_lang</code>.
     */
    public void setWordEtymWordLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_word_lang</code>.
     */
    public String getWordEtymWordLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_word_meaning_words</code>.
     */
    public void setWordEtymWordMeaningWords(String... value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_word_meaning_words</code>.
     */
    public String[] getWordEtymWordMeaningWords() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.etymology_type_code</code>.
     */
    public void setEtymologyTypeCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.etymology_type_code</code>.
     */
    public String getEtymologyTypeCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.etymology_year</code>.
     */
    public void setEtymologyYear(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.etymology_year</code>.
     */
    public String getEtymologyYear() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_comment</code>.
     */
    public void setWordEtymComment(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_comment</code>.
     */
    public String getWordEtymComment() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_is_questionable</code>.
     */
    public void setWordEtymIsQuestionable(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_is_questionable</code>.
     */
    public Boolean getWordEtymIsQuestionable() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_order_by</code>.
     */
    public void setWordEtymOrderBy(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_order_by</code>.
     */
    public Long getWordEtymOrderBy() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>public.mview_ww_word_etymology.word_etym_relations</code>.
     */
    public void setWordEtymRelations(TypeWordEtymRelationRecord... value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.mview_ww_word_etymology.word_etym_relations</code>.
     */
    public TypeWordEtymRelationRecord[] getWordEtymRelations() {
        return (TypeWordEtymRelationRecord[]) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, Long, Long, String, String, String[], String, String, String, Boolean, Long, TypeWordEtymRelationRecord[]> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, Long, Long, String, String, String[], String, String, String, Boolean, Long, TypeWordEtymRelationRecord[]> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_WORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_WORD_LANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field6() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_WORD_MEANING_WORDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.ETYMOLOGY_TYPE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.ETYMOLOGY_YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_IS_QUESTIONABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_ORDER_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeWordEtymRelationRecord[]> field12() {
        return MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY.WORD_ETYM_RELATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getWordEtymId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getWordEtymWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getWordEtymWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getWordEtymWordLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component6() {
        return getWordEtymWordMeaningWords();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getEtymologyTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getEtymologyYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getWordEtymComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getWordEtymIsQuestionable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getWordEtymOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeWordEtymRelationRecord[] component12() {
        return getWordEtymRelations();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getWordEtymId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getWordEtymWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getWordEtymWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getWordEtymWordLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value6() {
        return getWordEtymWordMeaningWords();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getEtymologyTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getEtymologyYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getWordEtymComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getWordEtymIsQuestionable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getWordEtymOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeWordEtymRelationRecord[] value12() {
        return getWordEtymRelations();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value2(Long value) {
        setWordEtymId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value3(Long value) {
        setWordEtymWordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value4(String value) {
        setWordEtymWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value5(String value) {
        setWordEtymWordLang(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value6(String... value) {
        setWordEtymWordMeaningWords(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value7(String value) {
        setEtymologyTypeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value8(String value) {
        setEtymologyYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value9(String value) {
        setWordEtymComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value10(Boolean value) {
        setWordEtymIsQuestionable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value11(Long value) {
        setWordEtymOrderBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord value12(TypeWordEtymRelationRecord... value) {
        setWordEtymRelations(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymologyRecord values(Long value1, Long value2, Long value3, String value4, String value5, String[] value6, String value7, String value8, String value9, Boolean value10, Long value11, TypeWordEtymRelationRecord[] value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwWordEtymologyRecord
     */
    public MviewWwWordEtymologyRecord() {
        super(MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY);
    }

    /**
     * Create a detached, initialised MviewWwWordEtymologyRecord
     */
    public MviewWwWordEtymologyRecord(Long wordId, Long wordEtymId, Long wordEtymWordId, String wordEtymWord, String wordEtymWordLang, String[] wordEtymWordMeaningWords, String etymologyTypeCode, String etymologyYear, String wordEtymComment, Boolean wordEtymIsQuestionable, Long wordEtymOrderBy, TypeWordEtymRelationRecord[] wordEtymRelations) {
        super(MviewWwWordEtymology.MVIEW_WW_WORD_ETYMOLOGY);

        set(0, wordId);
        set(1, wordEtymId);
        set(2, wordEtymWordId);
        set(3, wordEtymWord);
        set(4, wordEtymWordLang);
        set(5, wordEtymWordMeaningWords);
        set(6, etymologyTypeCode);
        set(7, etymologyYear);
        set(8, wordEtymComment);
        set(9, wordEtymIsQuestionable);
        set(10, wordEtymOrderBy);
        set(11, wordEtymRelations);
    }
}
