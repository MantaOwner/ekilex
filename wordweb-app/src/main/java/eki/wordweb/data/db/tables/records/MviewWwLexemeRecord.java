/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwLexeme;
import eki.wordweb.data.db.udt.records.TypeGovernmentRecord;
import eki.wordweb.data.db.udt.records.TypeGrammarRecord;
import eki.wordweb.data.db.udt.records.TypeLangComplexityRecord;
import eki.wordweb.data.db.udt.records.TypeMeaningWordRecord;
import eki.wordweb.data.db.udt.records.TypePublicNoteRecord;
import eki.wordweb.data.db.udt.records.TypeUsageRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwLexemeRecord extends TableRecordImpl<MviewWwLexemeRecord> implements Record19<Long, Long, Long, String, String, Integer, Integer, String, Long, String[], String[], String[], TypeMeaningWordRecord[], String[], TypePublicNoteRecord[], TypeGrammarRecord[], TypeGovernmentRecord[], TypeUsageRecord[], TypeLangComplexityRecord[]> {

    private static final long serialVersionUID = 2095750839;

    /**
     * Setter for <code>public.mview_ww_lexeme.lexeme_id</code>.
     */
    public void setLexemeId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.lexeme_id</code>.
     */
    public Long getLexemeId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.word_id</code>.
     */
    public void setWordId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.dataset_type</code>.
     */
    public void setDatasetType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.dataset_type</code>.
     */
    public String getDatasetType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.level1</code>.
     */
    public void setLevel1(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.level1</code>.
     */
    public Integer getLevel1() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.level2</code>.
     */
    public void setLevel2(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.level2</code>.
     */
    public Integer getLevel2() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.complexity</code>.
     */
    public void setComplexity(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.complexity</code>.
     */
    public String getComplexity() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.lex_order_by</code>.
     */
    public void setLexOrderBy(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.lex_order_by</code>.
     */
    public Long getLexOrderBy() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.register_codes</code>.
     */
    public void setRegisterCodes(String... value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.register_codes</code>.
     */
    public String[] getRegisterCodes() {
        return (String[]) get(9);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.pos_codes</code>.
     */
    public void setPosCodes(String... value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.pos_codes</code>.
     */
    public String[] getPosCodes() {
        return (String[]) get(10);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.deriv_codes</code>.
     */
    public void setDerivCodes(String... value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.deriv_codes</code>.
     */
    public String[] getDerivCodes() {
        return (String[]) get(11);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.meaning_words</code>.
     */
    public void setMeaningWords(TypeMeaningWordRecord... value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.meaning_words</code>.
     */
    public TypeMeaningWordRecord[] getMeaningWords() {
        return (TypeMeaningWordRecord[]) get(12);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.advice_notes</code>.
     */
    public void setAdviceNotes(String... value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.advice_notes</code>.
     */
    public String[] getAdviceNotes() {
        return (String[]) get(13);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.public_notes</code>.
     */
    public void setPublicNotes(TypePublicNoteRecord... value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.public_notes</code>.
     */
    public TypePublicNoteRecord[] getPublicNotes() {
        return (TypePublicNoteRecord[]) get(14);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.grammars</code>.
     */
    public void setGrammars(TypeGrammarRecord... value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.grammars</code>.
     */
    public TypeGrammarRecord[] getGrammars() {
        return (TypeGrammarRecord[]) get(15);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.governments</code>.
     */
    public void setGovernments(TypeGovernmentRecord... value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.governments</code>.
     */
    public TypeGovernmentRecord[] getGovernments() {
        return (TypeGovernmentRecord[]) get(16);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.usages</code>.
     */
    public void setUsages(TypeUsageRecord... value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.usages</code>.
     */
    public TypeUsageRecord[] getUsages() {
        return (TypeUsageRecord[]) get(17);
    }

    /**
     * Setter for <code>public.mview_ww_lexeme.lang_complexities</code>.
     */
    public void setLangComplexities(TypeLangComplexityRecord... value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexeme.lang_complexities</code>.
     */
    public TypeLangComplexityRecord[] getLangComplexities() {
        return (TypeLangComplexityRecord[]) get(18);
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, Long, Long, String, String, Integer, Integer, String, Long, String[], String[], String[], TypeMeaningWordRecord[], String[], TypePublicNoteRecord[], TypeGrammarRecord[], TypeGovernmentRecord[], TypeUsageRecord[], TypeLangComplexityRecord[]> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Long, Long, Long, String, String, Integer, Integer, String, Long, String[], String[], String[], TypeMeaningWordRecord[], String[], TypePublicNoteRecord[], TypeGrammarRecord[], TypeGovernmentRecord[], TypeUsageRecord[], TypeLangComplexityRecord[]> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.LEXEME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.WORD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.MEANING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.DATASET_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.DATASET_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.LEVEL1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.LEVEL2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.COMPLEXITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.LEX_ORDER_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field10() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.REGISTER_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field11() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.POS_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field12() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.DERIV_CODES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeMeaningWordRecord[]> field13() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.MEANING_WORDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field14() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.ADVICE_NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypePublicNoteRecord[]> field15() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.PUBLIC_NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeGrammarRecord[]> field16() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.GRAMMARS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeGovernmentRecord[]> field17() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.GOVERNMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeUsageRecord[]> field18() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.USAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TypeLangComplexityRecord[]> field19() {
        return MviewWwLexeme.MVIEW_WW_LEXEME.LANG_COMPLEXITIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getLexemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getMeaningId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDatasetType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getLevel1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getLevel2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getComplexity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getLexOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component10() {
        return getRegisterCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component11() {
        return getPosCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component12() {
        return getDerivCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningWordRecord[] component13() {
        return getMeaningWords();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component14() {
        return getAdviceNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypePublicNoteRecord[] component15() {
        return getPublicNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeGrammarRecord[] component16() {
        return getGrammars();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeGovernmentRecord[] component17() {
        return getGovernments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeUsageRecord[] component18() {
        return getUsages();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeLangComplexityRecord[] component19() {
        return getLangComplexities();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getLexemeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getWordId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getMeaningId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDatasetType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getLevel1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getLevel2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getComplexity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getLexOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value10() {
        return getRegisterCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value11() {
        return getPosCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value12() {
        return getDerivCodes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeMeaningWordRecord[] value13() {
        return getMeaningWords();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value14() {
        return getAdviceNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypePublicNoteRecord[] value15() {
        return getPublicNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeGrammarRecord[] value16() {
        return getGrammars();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeGovernmentRecord[] value17() {
        return getGovernments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeUsageRecord[] value18() {
        return getUsages();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeLangComplexityRecord[] value19() {
        return getLangComplexities();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value1(Long value) {
        setLexemeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value2(Long value) {
        setWordId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value3(Long value) {
        setMeaningId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value4(String value) {
        setDatasetType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value5(String value) {
        setDatasetCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value6(Integer value) {
        setLevel1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value7(Integer value) {
        setLevel2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value8(String value) {
        setComplexity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value9(Long value) {
        setLexOrderBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value10(String... value) {
        setRegisterCodes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value11(String... value) {
        setPosCodes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value12(String... value) {
        setDerivCodes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value13(TypeMeaningWordRecord... value) {
        setMeaningWords(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value14(String... value) {
        setAdviceNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value15(TypePublicNoteRecord... value) {
        setPublicNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value16(TypeGrammarRecord... value) {
        setGrammars(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value17(TypeGovernmentRecord... value) {
        setGovernments(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value18(TypeUsageRecord... value) {
        setUsages(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord value19(TypeLangComplexityRecord... value) {
        setLangComplexities(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexemeRecord values(Long value1, Long value2, Long value3, String value4, String value5, Integer value6, Integer value7, String value8, Long value9, String[] value10, String[] value11, String[] value12, TypeMeaningWordRecord[] value13, String[] value14, TypePublicNoteRecord[] value15, TypeGrammarRecord[] value16, TypeGovernmentRecord[] value17, TypeUsageRecord[] value18, TypeLangComplexityRecord[] value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwLexemeRecord
     */
    public MviewWwLexemeRecord() {
        super(MviewWwLexeme.MVIEW_WW_LEXEME);
    }

    /**
     * Create a detached, initialised MviewWwLexemeRecord
     */
    public MviewWwLexemeRecord(Long lexemeId, Long wordId, Long meaningId, String datasetType, String datasetCode, Integer level1, Integer level2, String complexity, Long lexOrderBy, String[] registerCodes, String[] posCodes, String[] derivCodes, TypeMeaningWordRecord[] meaningWords, String[] adviceNotes, TypePublicNoteRecord[] publicNotes, TypeGrammarRecord[] grammars, TypeGovernmentRecord[] governments, TypeUsageRecord[] usages, TypeLangComplexityRecord[] langComplexities) {
        super(MviewWwLexeme.MVIEW_WW_LEXEME);

        set(0, lexemeId);
        set(1, wordId);
        set(2, meaningId);
        set(3, datasetType);
        set(4, datasetCode);
        set(5, level1);
        set(6, level2);
        set(7, complexity);
        set(8, lexOrderBy);
        set(9, registerCodes);
        set(10, posCodes);
        set(11, derivCodes);
        set(12, meaningWords);
        set(13, adviceNotes);
        set(14, publicNotes);
        set(15, grammars);
        set(16, governments);
        set(17, usages);
        set(18, langComplexities);
    }
}
