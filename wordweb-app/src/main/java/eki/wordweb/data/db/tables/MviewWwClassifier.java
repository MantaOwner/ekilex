/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Indexes;
import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwClassifierRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwClassifier extends TableImpl<MviewWwClassifierRecord> {

    private static final long serialVersionUID = -2000189792;

    /**
     * The reference instance of <code>public.mview_ww_classifier</code>
     */
    public static final MviewWwClassifier MVIEW_WW_CLASSIFIER = new MviewWwClassifier();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwClassifierRecord> getRecordType() {
        return MviewWwClassifierRecord.class;
    }

    /**
     * The column <code>public.mview_ww_classifier.name</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_classifier.origin</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> ORIGIN = createField(DSL.name("origin"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_classifier.code</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.mview_ww_classifier.value</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_classifier.lang</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> LANG = createField(DSL.name("lang"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.mview_ww_classifier.type</code>.
     */
    public final TableField<MviewWwClassifierRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.mview_ww_classifier.order_by</code>.
     */
    public final TableField<MviewWwClassifierRecord, Long> ORDER_BY = createField(DSL.name("order_by"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.mview_ww_classifier</code> table reference
     */
    public MviewWwClassifier() {
        this(DSL.name("mview_ww_classifier"), null);
    }

    /**
     * Create an aliased <code>public.mview_ww_classifier</code> table reference
     */
    public MviewWwClassifier(String alias) {
        this(DSL.name(alias), MVIEW_WW_CLASSIFIER);
    }

    /**
     * Create an aliased <code>public.mview_ww_classifier</code> table reference
     */
    public MviewWwClassifier(Name alias) {
        this(alias, MVIEW_WW_CLASSIFIER);
    }

    private MviewWwClassifier(Name alias, Table<MviewWwClassifierRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwClassifier(Name alias, Table<MviewWwClassifierRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    public <O extends Record> MviewWwClassifier(Table<O> child, ForeignKey<O, MviewWwClassifierRecord> key) {
        super(child, key, MVIEW_WW_CLASSIFIER);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MVIEW_WW_CLASSIFIER_NAME_CODE_LANG_TYPE_IDX, Indexes.MVIEW_WW_CLASSIFIER_NAME_ORIGIN_CODE_LANG_TYPE_IDX);
    }

    @Override
    public MviewWwClassifier as(String alias) {
        return new MviewWwClassifier(DSL.name(alias), this);
    }

    @Override
    public MviewWwClassifier as(Name alias) {
        return new MviewWwClassifier(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwClassifier rename(String name) {
        return new MviewWwClassifier(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwClassifier rename(Name name) {
        return new MviewWwClassifier(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
